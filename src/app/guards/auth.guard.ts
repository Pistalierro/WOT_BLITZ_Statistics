import {CanActivateFn, Router} from '@angular/router';
import {inject} from '@angular/core';
import {AuthService} from '../services/auth.service';
import {MatDialog} from '@angular/material/dialog';
import {AuthComponent} from '../components/features/auth/auth.component';

export const authGuard: CanActivateFn = async (route, state) => {
  const authService = inject(AuthService);
  const router = inject(Router);
  const dialog = inject(MatDialog);

  console.log('üëÄ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');

  // üî• –ñ–¥—ë–º, –ø–æ–∫–∞ Firebase –∑–∞–≥—Ä—É–∑–∏—Ç –¥–∞–Ω–Ω—ã–µ (–º–∞–∫—Å–∏–º—É–º 3 —Å–µ–∫—É–Ω–¥—ã)
  if (!authService.isAuthLoaded()) {
    let attempts = 0;
    while (!authService.isAuthLoaded() && attempts < 30) {
      await new Promise((resolve) => setTimeout(resolve, 100)); // üîÑ –ñ–¥—ë–º 100 –º—Å
      attempts++;
    }
  }

  console.log('‚úÖ Firebase –∑–∞–≥—Ä—É–∑–∏–ª—Å—è. user:', authService.userSignal());

  // 1Ô∏è‚É£ –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω ‚Üí –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –º–∞—Ä—à—Ä—É—Ç
  if (authService.isLoggedIn()) {
    return true;
  }

  // 2Ô∏è‚É£ –ï—Å–ª–∏ –º—ã —Å—é–¥–∞ –¥–æ—à–ª–∏ ‚Üí –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
  console.log('‚õî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –≤—Ö–æ–¥–∞');

  const isMobile = window.innerWidth <= 600;
  const containerWidth = document.querySelector('.container')?.clientWidth || window.innerWidth;

  const dialogRef = dialog.open(AuthComponent, {
    width: isMobile ? `${containerWidth}px` : '40%',
    height: 'auto',
    maxWidth: isMobile ? 'none' : '500px',
    panelClass: isMobile ? 'full-screen-dialog' : '',
    disableClose: false,
    backdropClass: 'custom-backdrop',
  });

  // 3Ô∏è‚É£ –ñ–¥—ë–º –∑–∞–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞
  return dialogRef.afterClosed().toPromise().then(() => {
    if (authService.isLoggedIn()) {
      router.navigateByUrl(state.url);
      return true; // ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à—ë–ª ‚Üí –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –º–∞—Ä—à—Ä—É—Ç
    } else {
      router.navigate(['/home']); // ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–æ—à—ë–ª ‚Üí —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º
      return false;
    }
  });
};
